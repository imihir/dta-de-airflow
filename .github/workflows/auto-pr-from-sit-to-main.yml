name: Auto PRs from Dev and SIT

on:
  push:
    branches:
      - sit
      - dev

permissions:
  contents: write
  pull-requests: write

jobs:
  pr-from-dev-to-sit:
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Dev branch
        uses: actions/checkout@v3

      - name: Set up Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Create PR from Dev to SIT
        run: |
          existing_pr=$(gh pr list --base sit --head dev --json number --jq '.[0].number')

          if [ -z "$existing_pr" ]; then
            echo "No existing PR found. Creating a new one..."
            gh pr create \
              --title "Promote Dev to SIT" \
              --body "Automatically creating a pull request from Dev to SIT." \
              --base sit \
              --head dev
          else
            echo "PR from dev to sit already exists: #$existing_pr"
          fi
        env:
          GH_TOKEN: ${{ secrets.CICD_TOKEN }}

  pr-from-sit-to-main:
    if: github.ref == 'refs/heads/sit'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout SIT branch
        uses: actions/checkout@v3

      - name: Set up Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Create PR from SIT to Main
        run: |
          existing_pr=$(gh pr list --base main --head sit --json number --jq '.[0].number')

          if [ -z "$existing_pr" ]; then
            echo "No existing PR found. Creating a new one..."
            gh pr create \
              --title "Promote SIT to Main" \
              --body "Automatically creating a pull request from SIT to Main." \
              --base main \
              --head sit
          else
            echo "PR from sit to main already exists: #$existing_pr"
          fi
        env:
          GH_TOKEN: ${{ secrets.CICD_TOKEN }}

  update-readme-with-pr-status:
    runs-on: ubuntu-latest
    needs: [pr-from-dev-to-sit, pr-from-sit-to-main]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git identity
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install GitHub CLI
        run: sudo apt-get install gh -y

      - name: Update README with PR status
        run: |
          # Check if PR exists from dev to sit
          dev_to_sit=$(gh pr list --base sit --head dev --state open --json number --jq '.[0].number')
          sit_to_main=$(gh pr list --base main --head sit --state open --json number --jq '.[0].number')

          # Set default statuses as ❌ (not found)
          dev_status="❌"
          sit_status="❌"

          # If PRs exist, update status to ✅
          if [ -n "$dev_to_sit" ]; then
            dev_status="✅"
          fi

          if [ -n "$sit_to_main" ]; then
            sit_status="✅"
          fi

          # Update the README.md file with PR status
          sed -i '/<!-- PR-STATUS-START -->/,/<!-- PR-STATUS-END -->/c\
<!-- PR-STATUS-START -->\n\
| Stage | Source Branch | Target Branch | Open PR |\n\
|-------|----------------|----------------|---------|\n\
| Dev ➝ SIT | dev | sit | '"$dev_status"' |\n\
| SIT ➝ Main | sit | main | '"$sit_status"' |\n\
<!-- PR-STATUS-END -->' README.md

          # Commit and push the changes if README.md was updated
          if [[ $(git status --porcelain) ]]; then
            git add README.md
            git commit -m "Update PR status in README"
            git push
          fi
        env:
          GH_TOKEN: ${{ secrets.CICD_TOKEN }}
